package modwarriors.notenoughkeys.asm;

import com.google.common.eventbus.EventBus;
import cpw.mods.fml.common.DummyModContainer;
import cpw.mods.fml.common.LoadController;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.relauncher.IFMLLoadingPlugin;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.util.Arrays;
import java.util.Map;

/**
 * @author TheTemportalist
 */
@IFMLLoadingPlugin.MCVersion("1.7.10")
@IFMLLoadingPlugin.TransformerExclusions({ "modwarriors.notenoughkeys.asm." })
public class NEKCore extends DummyModContainer implements IFMLLoadingPlugin {

	public static final String modId = "nekcore";
	public static final String modName = "Not Enough Keys Core";
	public static final Logger logger = LogManager.getLogger(NEKCore.modName);

	public NEKCore() {
		super(new ModMetadata());
		ModMetadata md = this.getMetadata();
		md.autogenerated = false;
		md.modId = NEKCore.modId;
		md.name = NEKCore.modName;
		md.version = "@MOD_VERSION@";
		md.authorList = Arrays.asList("TheTemportalist, Parker8283, Dmod");
		md.credits = "Written by Mod-Warriors, code stolen from various others.";
		md.description = "Sometimes you need a little black magic to make all the things works.";

	}

	@Override
	public String[] getASMTransformerClass() {
		return new String[0];
	}

	@Override
	public boolean registerBus(EventBus bus, LoadController controller) {
		return true;
	}

	@Override
	public String getModContainerClass() {
		return NEKCore.class.getName();
	}

	@Override
	public String getSetupClass() {
		return null;
	}

	@Override
	public void injectData(Map<String, Object> stringObjectMap) {

	}

	@Override
	public String getAccessTransformerClass() {
		return null;
	}

}
